{"version":3,"sources":["components/ToDoTemplate.js","ToDoContext.js","components/ToDoHead.js","components/ToDoItem.js","components/ToDoList.js","components/ToDoCreate.js","App.js","index.js"],"names":["ToDoTemplateBlock","styled","div","ToDoTemplate","children","initialTodos","id","text","done","todoReducer","state","action","type","concat","todo","map","filter","Error","TodoStateContext","createContext","TodoDispatchContext","TodoNextIdContext","ToDoProvider","useReducer","dispatch","nextId","useRef","Provider","value","useTodoState","useContext","useTodoDispatch","ToDoHeadBlock","ToDoHead","today","Date","dateString","toLocaleString","year","month","day","dayName","weekday","undoneTasks","className","length","CheckCircle","props","css","Text","Remove","ToDoItemBlock","React","memo","onClick","ToDoListBlock","ToDoList","todos","key","CircleButton","button","open","InsertFormPositioner","InsertForm","form","Input","input","useState","setOpen","setValue","onSubmit","e","preventDefault","current","autoFocus","placeholder","onChange","target","GlobalStyle","createGlobalStyle","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.396ef312.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst ToDoTemplateBlock = styled.div`\r\n    width: 512px;\r\n    height: 768px;\r\n\r\n    position: relative;\r\n    background: white;\r\n    border-radius: 16px;\r\n    box-shadow: 0 0 8px rgba(0,0,0,0.04);\r\n    margin: 0 auto;\r\n    margin-top: 96px;\r\n    margin-bottom: 32px;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n`;\r\n\r\nfunction ToDoTemplate({ children }) {\r\n  return (\r\n    <ToDoTemplateBlock> \r\n      { children }  \r\n    </ToDoTemplateBlock>\r\n  );\r\n}\r\nexport default ToDoTemplate;","import React, { useReducer , createContext , useContext , useRef } from 'react';\r\n\r\nconst initialTodos = [\r\n    {\r\n      id: 1,\r\n      text: '운동하기',\r\n      done: true\r\n    },\r\n    {\r\n      id: 2,\r\n      text: '뉴스 읽기',\r\n      done: true\r\n    },\r\n    { \r\n      id: 3, \r\n      text: '저녁 약속 가기', \r\n      done: false \r\n    },\r\n    { \r\n      id: 4, \r\n      text: '리액트 공부하기', \r\n      done: false \r\n    }\r\n  ];\r\n  \r\n\r\n  //다음 상태를 리턴해주는 함수 => CREATE, TOGGLE, REMOVE\r\n  function todoReducer(state, action) {\r\n    switch (action.type) {\r\n        case 'CREATE':\r\n          return state.concat(action.todo);\r\n        case 'TOGGLE':\r\n          return state.map(todo =>\r\n            todo.id === action.id ? { ...todo, done: !todo.done } : todo\r\n          );\r\n        case 'REMOVE':\r\n          return state.filter(todo => todo.id !== action.id);\r\n        default:\r\n          throw new Error(`Unhandled action type: ${action.type}`);\r\n      }\r\n  }\r\n\r\n  //context API\r\n  const TodoStateContext = createContext(null);\r\n  const TodoDispatchContext = createContext(null);\r\n  const TodoNextIdContext = createContext(null);\r\n\r\n  //context API provider사용\r\n  export function ToDoProvider({children}){\r\n      const [state, dispatch] = useReducer(todoReducer, initialTodos);\r\n      const nextId = useRef(5);\r\n      return (\r\n          <TodoStateContext.Provider value={state}>\r\n              <TodoDispatchContext.Provider value={dispatch}>\r\n                  <TodoNextIdContext.Provider value={nextId}>\r\n                  {children}\r\n                  </TodoNextIdContext.Provider>\r\n              </TodoDispatchContext.Provider>\r\n          </TodoStateContext.Provider>\r\n      );\r\n  }\r\n\r\n  //custom HOOK\r\n  export function useTodoState() {\r\n      return useContext(TodoStateContext);\r\n  }\r\n\r\n  export function useTodoDispatch() {\r\n      return useContext(TodoDispatchContext);\r\n  }\r\n\r\n  export function useTodoNextId() {\r\n    return useContext(TodoNextIdContext);\r\n  }","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { useTodoState } from '../ToDoContext';\r\n\r\nconst ToDoHeadBlock = styled.div`\r\n  h1 {\r\n    margin: 0;\r\n    font-size: 36px;\r\n    color: #343a40;\r\n  }\r\n  .day {\r\n    margin-top: 4px;\r\n    color: #868e96;\r\n    font-size: 21px;\r\n  }\r\n  .tasks-left {\r\n    color: #20c997;\r\n    font-size: 18px;\r\n    margin-top: 40px;\r\n    font-weight: bold;\r\n  }\r\n  padding-top: 48px;\r\n  padding-left: 32px;\r\n  padding-right: 32px;\r\n  padding-bottom: 24px;\r\n  border-bottom: 1px solid #e9ecef;\r\n`;\r\n\r\nfunction ToDoHead() {\r\n  const today = new Date();\r\n  const dateString = today.toLocaleString('ko-KR', {\r\n    year: 'numeric',\r\n    month: 'long',\r\n    day: 'numeric'\r\n  });\r\n  const dayName = today.toLocaleString('ko-KR', { weekday: 'long' });\r\n\r\n  const todos = useTodoState();\r\n  const undoneTasks = todos.filter(todo => !todo.done);\r\n\r\n  return (\r\n    <ToDoHeadBlock>\r\n      <h1>{dateString}</h1>\r\n      <div className=\"day\">{dayName}</div>\r\n      <div className=\"tasks-left\">할 일 {undoneTasks.length}개 남음</div>\r\n    </ToDoHeadBlock>\r\n  );\r\n}\r\nexport default ToDoHead;","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { MdDone, MdDelete } from 'react-icons/md';\r\nimport { useTodoDispatch } from '../ToDoContext';\r\n\r\nconst CheckCircle = styled.div`\r\n  width: 32px;\r\n  height: 32px;\r\n  border-radius: 16px;\r\n  border: 1px solid #ced4da;\r\n  font-size: 24px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-right: 20px;\r\n  cursor: pointer;\r\n  ${props =>\r\n    props.done &&\r\n    css`\r\n      border: 1px solid #38d9a9;\r\n      color: #38d9a9;\r\n    `}\r\n`;\r\n\r\nconst Text = styled.div`\r\n  flex: 1;\r\n  font-size: 21px;\r\n  color: #495057;\r\n  ${props =>\r\n    props.done &&\r\n    css`\r\n      color: #ced4da;\r\n      text-decoration:line-through\r\n    `}\r\n`;\r\n\r\nconst Remove = styled.div`\r\n  opacity: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: #dee2e6;\r\n  font-size: 24px;\r\n  cursor: pointer;\r\n  &:hover {\r\n    color: #ff6b6b;\r\n  }\r\n`;\r\n\r\nconst ToDoItemBlock = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  padding-top: 12px;\r\n  padding-bottom: 12px;\r\n  &:hover {\r\n    ${Remove} {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n//line 54 : hover일 때 remove컴포넌트 불투명도 1로 만들어주는 코드\r\n\r\n\r\nfunction ToDoItem({ id, done, text }) {\r\n  const dispatch = useTodoDispatch();\r\n\r\n  const onToggle = () => {\r\n    dispatch({\r\n      type: 'TOGGLE',\r\n      id\r\n    });\r\n  };\r\n\r\n  const onRemove = () => {\r\n    dispatch({\r\n      type: 'REMOVE',\r\n      id\r\n    });\r\n  };\r\n\r\n  return (\r\n    <ToDoItemBlock>\r\n        <CheckCircle onClick={onToggle} done={done}>\r\n            {done && <MdDone />}\r\n        </CheckCircle>\r\n        <Text done={done}>{text}</Text>\r\n        <Remove onClick={onRemove}>\r\n            <MdDelete />\r\n        </Remove>\r\n    </ToDoItemBlock>\r\n  );\r\n}\r\n\r\nexport default React.memo(ToDoItem);","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport ToDoItem from './ToDoItem';\r\nimport { useTodoState } from '../ToDoContext';\r\n\r\nconst ToDoListBlock = styled.div`\r\n    flex: 1;\r\n    padding: 20px 32px;\r\n    padding-bottom: 48px;\r\n    overflow-y: auto;\r\n`;\r\n\r\nfunction ToDoList() {\r\n  const todos = useTodoState();\r\n  return (\r\n    <ToDoListBlock>\r\n      {todos.map(todo => (\r\n        <ToDoItem\r\n          id={todo.id}\r\n          text={todo.text}\r\n          done={todo.done}\r\n          key={todo.id}\r\n        />\r\n      ))}\r\n    </ToDoListBlock>\r\n  );\r\n}\r\n\r\nexport default ToDoList;","import React, { useState } from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport { MdAdd } from 'react-icons/md';\r\nimport { useTodoNextId , useTodoDispatch } from '../ToDoContext';\r\n\r\nconst CircleButton = styled.button`\r\n  background: #38d9a9;\r\n  &:hover {\r\n    background: #63e6be;\r\n  }\r\n  &:active {\r\n    background: #20c997;\r\n  }\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  z-index: 5;\r\n  cursor: pointer;\r\n  width: 80px;\r\n  height: 80px;\r\n  font-size: 60px;\r\n\r\n  position: absolute;\r\n  left: 50%;\r\n  bottom: 0px;\r\n  transform: translate(-50%, 50%);\r\n  color: white;\r\n  border-radius: 50%;\r\n  border: none;\r\n  outline: none;\r\n \r\n  transition: 0.125s all ease-in;\r\n  ${props =>\r\n    props.open &&\r\n    css`\r\n      background: #ff6b6b;\r\n      &:hover {\r\n        background: #ff8787;\r\n      }\r\n      &:active {\r\n        background: #fa5252;\r\n      }\r\n      transform: translate(-50%, 50%) rotate(45deg);\r\n    `}\r\n`;\r\n\r\nconst InsertFormPositioner = styled.div`\r\n  width: 100%;\r\n  bottom: 0;\r\n  left: 0;\r\n  position: absolute;\r\n`;\r\n\r\nconst InsertForm = styled.form`\r\n  background: #f8f9fa;\r\n  padding-left: 32px;\r\n  padding-top: 32px;\r\n  padding-right: 32px;\r\n  padding-bottom: 72px;\r\n\r\n  border-bottom-left-radius: 16px;\r\n  border-bottom-right-radius: 16px;\r\n  border-top: 1px solid #e9ecef;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  padding: 12px;\r\n  border-radius: 4px;\r\n  border: 1px solid #dee2e6;\r\n  width: 100%;\r\n  outline: none;\r\n  font-size: 18px;\r\n  box-sizing: border-box;\r\n`;\r\n\r\n\r\nfunction ToDoCreate() {\r\n    const [open, setOpen] = useState(false);\r\n    const [value, setValue] = useState('');\r\n    const dispatch = useTodoDispatch();\r\n    const nextId = useTodoNextId();\r\n  \r\n    const onToggle = () => setOpen(!open);\r\n    const onChange = e => setValue(e.target.value);\r\n    const onSubmit = e => {\r\n      e.preventDefault();\r\n      dispatch({\r\n        type: 'CREATE',\r\n        todo: {\r\n          id: nextId.current,\r\n          text: value,\r\n          done: false\r\n        }\r\n      });\r\n      nextId.current += 1;\r\n      setOpen(false);\r\n      setValue('');\r\n    };\r\n\r\n    return (\r\n        <>\r\n        {open && (\r\n            <InsertFormPositioner>\r\n                <InsertForm onSubmit={onSubmit}>\r\n                    <Input\r\n                    autoFocus\r\n                    placeholder=\"할 일을 입력 후, Enter 를 누르세요\"\r\n                    onChange={onChange}\r\n                    value={value}\r\n                    ></Input>\r\n                </InsertForm>\r\n            </InsertFormPositioner>\r\n        )}\r\n        <CircleButton onClick={onToggle} open={open}>\r\n            <MdAdd />      \r\n        </CircleButton>\r\n        </>\r\n    );\r\n}\r\nexport default React.memo(ToDoCreate);","import React from 'react';\nimport { createGlobalStyle } from 'styled-components';\nimport ToDoTemplate from './components/ToDoTemplate'\nimport ToDoHead from './components/ToDoHead';\nimport ToDoList from './components/ToDoList';\nimport ToDoCreate from './components/ToDoCreate';\nimport { ToDoProvider } from './ToDoContext';\n\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    background: #e9ecef;\n  }\n`;\n\nfunction App() {\n  return (\n    <ToDoProvider>\n      <GlobalStyle />\n      <ToDoTemplate>\n        <ToDoHead />\n        <ToDoList />\n        <ToDoCreate />\n      </ToDoTemplate>\n    </ToDoProvider>\n  );\n}\n\n//context API 사용하기위해 ToDoProvider로 감싸준다\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}